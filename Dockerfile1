# Build stage for ImageMagick
FROM debian:bookworm-slim as imagemagick-builder

# Install build dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        wget \
        build-essential \
        pkg-config \
        libjpeg-dev \
        libpng-dev \
        libtiff-dev \
        libwebp-dev \
        libgif-dev \
        libx11-dev && \
    rm -rf /var/lib/apt/lists/*

# Install ImageMagick from source with optimized configuration
ARG IMAGEMAGICK_VERSION=7.1.1-29
RUN cd /tmp && \
    wget https://www.imagemagick.org/download/ImageMagick-${IMAGEMAGICK_VERSION}.tar.gz && \
    tar -xvf ImageMagick-${IMAGEMAGICK_VERSION}.tar.gz && \
    cd ImageMagick-${IMAGEMAGICK_VERSION} && \
    ./configure --prefix=/usr \
        --enable-shared \
        --disable-static \
        --with-modules \
        --without-magick-plus-plus \
        --without-perl \
        --disable-openmp \
        --with-gvc=no \
        --disable-docs \
        --without-x \
        --disable-deprecated && \
    make -j$(nproc) && \
    make install && \
    ldconfig

# Go build stage
FROM golang:1.21-bookworm as builder

WORKDIR /build

# Copy go mod files first for better cache utilization
COPY go.mod go.sum ./
RUN go mod download

# Copy ImageMagick files from previous stage
COPY --from=imagemagick-builder /usr/lib /usr/lib
COPY --from=imagemagick-builder /usr/include /usr/include
COPY --from=imagemagick-builder /usr/bin /usr/bin
RUN ldconfig

# Set build environment variables
ENV PKG_CONFIG_PATH="/usr/lib/pkgconfig" \
    CGO_CFLAGS="-I/usr/include/ImageMagick-7" \
    CGO_LDFLAGS="-L/usr/lib -lMagickWand-7.Q16HDRI -lMagickCore-7.Q16HDRI" \
    CGO_CFLAGS_ALLOW='-Xpreprocessor'

# Copy source code
COPY . .

# Build the application with optimizations
RUN go build -ldflags="-w -s" -o app

# Final stage
FROM debian:bookworm-slim

LABEL maintainer="buzzxu <downloadxu@163.com>"

# Create non-root user
RUN useradd -r -u 1001 -g root appuser

# Install runtime dependencies only
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        fontconfig \
        libjpeg62-turbo \
        libpng16-16 \
        libtiff5 \
        libwebp7 \
        libgif7 \
        libx11-6 \
        ca-certificates && \
    rm -rf /var/lib/apt/lists/* && \
    ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && \
    echo "Asia/Shanghai" > /etc/timezone && \
    mkdir -p /data/images /app && \
    chown -R appuser:root /app /data/images && \
    chmod -R g=u /app /data/images

# Copy ImageMagick libraries
COPY --from=imagemagick-builder /usr/lib/libMagick* /usr/lib/
COPY --from=imagemagick-builder /usr/lib/ImageMagick-7.1 /usr/lib/ImageMagick-7.1
RUN ldconfig

# Copy application files
COPY --from=builder --chown=appuser:root /build/app /app/
COPY --chown=appuser:root docker/conf.yml /app/
COPY --chown=appuser:root docker/run.sh /app/
COPY --chown=appuser:root docker/default.png /data/images/
COPY --chown=appuser:root assets/msyh.ttf /app/

# Set environment variables
ENV TZ=Asia/Shanghai \
    LANG=C.UTF-8 \
    PATH="/app:$PATH"

# Switch to non-root user
USER appuser

WORKDIR /app

EXPOSE 3000

HEALTHCHECK --interval=30s --timeout=3s \
    CMD curl -f http://localhost:3000/health || exit 1

ENTRYPOINT ["/bin/bash", "run.sh"]