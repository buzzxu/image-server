FROM golang:alpine as build

WORKDIR $GOPATH/src/image-server
ADD . $GOPATH/src/image-server
ENV GO111MODULE=on
ENV GOPROXY=https://goproxy.io
#RUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories

RUN apk update && apk upgrade;  \
    apk --no-cache add  gcc g++ zlib libwebp-dev libpng-dev  libjpeg-turbo-dev giflib-dev libx11-dev imagemagick-dev && \
    export CGO_CFLAGS="-I`pkg-config --cflags MagickWand`"; \
    export CGO_LDFLAGS="-I`pkg-config --libs MagickWand`"; \
    export CGO_CFLAGS_ALLOW='-Xpreprocessor'; \
    rm -rf $GOPATH/pkg/linux_amd64/gopkg.in/gographics/imagick.v3; \
    cd $GOPATH/src/image-server && go install -tags no_pkgconfig -v gopkg.in/gographics/imagick.v3/imagick; \
    go build -o app; \
    mv app  /opt/app;


FROM buzzxu/alpine-glibc:latest

MAINTAINER buzzxu <downloadxu@163.com>

WORKDIR /app
COPY --from=build /opt/app /app
#
#RUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories
RUN apk update && apk upgrade && \
    apk add --no-cache -U build-dependencies wget file pkgconf zlib libx11-dev libpng-dev libjpeg-turbo-dev libwebp-dev giflib-dev tzdata xz-dev && \
     cd  /tmp && \
    	wget http://www.imagemagick.org/download/ImageMagick.tar.gz && \
    	tar -xvf ImageMagick.tar.gz && \
    	cd ImageMagick* && \
    	./configure --prefix=/usr \
    	    --without-magick-plus-plus \
    	    --without-perl \
    	    --disable-openmp \
    	    --with-gvc=no \
    	    --disable-docs && \
    make -j$(nproc) && make install && \
    cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && \
    echo "Asia/Shanghai" > /etc/timezone && \
    mkdir -p /data/images && \
    apk del wget build-dependencies && \
    rm -rf /var/cache/apk/* && \
    rm -rf /tmp/*

ADD docker/conf.yml /app/conf.yml
ADD docker/run.sh /app/run.sh
ADD docker/default.png /data/images

ENV TZ Asia/Shanghai
ENV LANG C.UTF-8

EXPOSE 3000
#ENTRYPOINT ["/bin/sh","run.sh"]

